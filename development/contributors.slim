doctype html
html
  head
    title data-l10n-id="pageTitle" Для авторов и независимых переводчиков | Frontender Magazine
    meta charset="UTF-8"
    meta http-equiv="X-UA-Compatible" content="IE=edge;chrome=1"
    meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
    link rel="stylesheet" type="text/css" href="css/styles.css"
    script data-main="js/contributor" src="js/require.js"
  body.about

    article.page
      section
        h1 Для авторов и независимых переводчиков

      nav.inner-navigation
        a href="#translator": span — Я хочу стать независимым переводчиком!
        nav
          a href="#how-to-find-article": span — Как мне выбрать статью для перевода?
          a href="#how-to-find-translation": span — Как мне проверить существуют ли переводы статьи?
          a href="#translation-repo": span — Что должно быть в репозитории перевода?
          a href="#translation-pay": span — Вы платите независимым переводчикам?
            
        a href="#author": span — Я хочу стать автором!
        nav
          a href="#how-to-find-article": span — Какие темы подходят для статей?
          a href="#article-repo": span — Что должно быть в репозитории перевода?
          a href="#author-pay": span — Вы платите авторам?

        a href="#typo": span — У вас есть какие‑то соглашения касательно типографики проекта?

        a href="#md": span — А что это за маркдаун, который вы постоянно упоминаете?
        nav
          a href="#md-link": span — Как в маркдауне обозначить ссылку?
          a href="#md-img": span — Как в маркдауне обозначить картинку?
          a href="#md-code": span — Как в маркдауне обозначить код?
          a href="#md-line": span — Как мне ограничить длинну строки 80 символами?

        a href="#questions": span — У меня ещё остались вопросы!

      section#translator
        h2 — Я хочу стать независимым переводчиком!
        p Процесс работы независимого переводчика выглядит следующим образом: 
        ol
          li Cначала нужно выбрать статью, которую вы будете переводить.
          li Проверить существуют ли на данный момент её переводы. Если они существуют, то скорее всего лучше будет выбрать другую статью.
          li Затем нужно получить разрешения на перевод у её автора или издания, которое её опубликовало. Это задача редактора журнала.
          li 
            |Если оно будет получено, то вас добавят в организацию 
            a href="http://github.com/FrontenderMagazine/" Frontender Magazine
            |  на GitHub, дадут доступ к панели администрирования проекта и, по желанию, в skype‑чат редакции, где можно будет задавать вопросы по поводу терминологии или процесса работы.
          li После этого вы сможете создать из панели администрирования репозиторий и начать работу над статьей.
          li Когда работа будет закончена, вы сообщите об этом любому штатному члену редакции и статья будет передана на вычитку корректору и редактору.
          li После того, как вычитка будет окончена мы назначим дату публикации.

      section#how-to-find-article
        h3 — Как мне выбрать статью для перевода?
        ol 
          li
            |Вы можете найти её в «
            a href="http://heap.frontender.info/" Куче
            |»,
          li предложить ту, которую вы нашли в сети и хотели бы перевести или
          li мы предложим вам статью сами.

      section#how-to-find-translation
        h3 — Как мне проверить существуют ли переводы статьи?
        p 
          | Проверить существование переводов можно, например, проверив ссылки на нее с помощью сервиса 
          a href="http://www.opensiteexplorer.org/" http://www.opensiteexplorer.org/
          |  или поискав её название с помощью Google.

      section#translation-repo
        h3 — Что должно быть в репозитории перевода?
        p Как минимум там будут:
        ul
          li 
            em ./eng.md
            |  — автоматически формируемый при создании репозитория перевода черновой вариант маркдауна на основе статьи. Он далек от идеала и, возможно, вы предпочтете сделать его вручную.
          li
            em ./README.md
            |  — создается автоматически, но изначально пуст. Должен содержать резюме статьи, обычно порядка 300 символов. Это резюме вы можете видеть на главной странице журнала под названием любой статьи. Не включает заглавие статьи. Регистр имени файла имеет значение.
          li 
            em ./rus.md
            |  — перевод статьи на русский язык. Маркдаун. Включает заглавие статьи. Заголовок с названием — первого уровня.
          li
            em ./img/
            |  — должен содержать картинки, которые есть в статье.
          li
            em ./examples/
            |  — директорий, который содержит отдельные страницы с примерами, если они есть.
        
        p Кроме того, в репозитории могут быть любые другие файлы, которые необходимы для статьи.

      section#translation-pay
        h3 — Вы платите независимым переводчикам?
        p Нет. К сожалению, на данный момент, мы оплачиваем только работу штатных переводчиков. Но независимые переводчики значительно свободнее могут выбирать статьи для перевода и дополнительно отмечаются при релизе статьи в медиа.

      section#author
        h2 — Я хочу стать автором!
        p Процесс работы автора выглядит следующим образом: 
        ol
          li Cначала нужно согласовать с одним из редакторов тему статьи. 
          li 
            |После того, как тема будет согласована, вас добавят в организацию 
            a href="http://github.com/FrontenderMagazine/" Frontender Magazine
            |  на GitHub, дадут доступ к панели администрирования проекта и, по желанию, в skype‑чат редакции, где можно будет задавать вопросы по поводу терминологии или процесса работы.
          li Затем вы сможете создать из панели администрирования репозиторий и начать работу над статьей.
          li Когда работа будет закончена, вы сообщите об этом любому штатному члену редакции и статья будет передана на вычитку корректору и редактору. В процессе могут возникнуть предложения по улучшению статьи или замечания и её вернут вам на доработку.
          li После того, как вычитка будет окончена мы назначим дату публикации.

      section#how-to-find-article
        h3 — Какие темы подходят для статей?
        p Они должны быть связаны с фронтенд‑разработкой или смежными областями, например типографикой. Но более конкретно это всегда решается в частном порядке.

      section#article-repo
        h3 — Что должно быть в репозитории статьи?
        p Как минимум там будут:
        ul
          li
            em ./README.md
            |  — создается автоматически, но изначально пуст. Должен содержать резюме статьи, обычно порядка 300 символов. Это резюме вы можете видеть на главной странице журнала под названием любой статьи. Не включает заглавие статьи. Регистр имени файла имеет значение.
          li 
            em ./rus.md
            |  — статья в маркдаун. Включает заглавие которое обозначается заголовком первого уровня.
          li
            em ./img/
            |  — должен содержать все картинки, которые есть в статье.
          li
            em ./examples/
            |  — директорий, который содержит отдельные страницы с примерами, если они есть.
        
        p Кроме того, в репозитории могут быть любые другие файлы, которые необходимы для статьи.

      section#author-pay
        h3 — Вы платите авторам?
        p Мы компенсируем выпитое в процессе написание статьи кофе. Обычно в размере 75$, но сумма может варьироваться в зависимости от качества и количества напитка, а так же того, кто именно его пьет.


      section#typo
        h2 — У вас есть какие‑то соглашения касательно типографики проекта?
        p Да, есть:
        ul
          li Три точки замените на многоточие: «...» &rarr; «…».
          li Дефисы, отбитые с обеих сторон пробелами, замените на тире: « - » &rarr; « — ».
          li «Программистские» кавычки " " и ' ' замените на правильные русские кавычки: внешние — « », внутренние — „ “.
          li Не забывайте про букву «Ё».

      section#md
        h2 — А что это за маркдаун, который вы постоянно упоминаете?
        p 
          |Об основах использования маркдауна можно прочесть 
          a href="http://ru.wikipedia.org/wiki/Markdown" тут
          |  или в статье одного из членов нашей редакции «
          a href="http://vstarkov.ru/markdown-basics/" Основы markdown
          |». В своей работе мы частично используем достоинства его диалекта 
          a href="http://github.github.com/github-flavored-markdown/" GitHub Flavored Markdown
          |  (GFM)

      section#md-link
        h3 — Как в маркдауне обозначить ссылку?
        p Ссылки в статье имеют вид:

        pre: code
          |Код вы сможете найти в [репозитории на GitHub][0].
           Более подробно об использовании Vibration API можно прочесть [тут][1].
        
        p Текст, который находится в первой паре скобок будет текстом внутри ссылки. Номер во второй паре скобок является уникальным идентификатором URL ссылки в рамках статьи. После окончания текста статьи содержится список ссылок вида:

        pre: code
          |[0]: http://github.com/ossreleasefeed/good-vibrations
           [1]: http://www.w3.org/TR/vibration/

        p В скобках содержится уникальный в рамках файла идентификатор URL. После двоеточия находится сам URL.

      section#md-img
        h3 — Как в маркдауне обозначить картинку?
        p 
          |Все изображения в статье должны быть сохранены в директорий 
          em img 
          |  находящийся в репозитории. В разметке используется запись вида:

        pre: code
          |
           ![Скриншот][Развернутое меню]
           ![Иллюстрация][Счастливые люди ловят сачками пролетающих мимо утконосов]

        ul
          li 
            |В первой паре скобок содержится текст, который будет в атрибуте 
            code alt 
            |  и содержит тип изображения.

          li Во второй паре скобок содержится описание того, что изображено на изображении, одновременно являющееся уникальным в рамках файла идентификатором.

          li В конце файла, после списка ссылок, добавляется находится список изображений вида:

        pre
          code
            |
             define ['MutationObserver-polyfil'], ->
              ###*
              # Класс обеспечивает работу пагинатора
              #
              # @class pageController
              ###
              class pageController
         
                ###*
                # Конструктор выполняет инициализацию пагинатора и обработчиков событий
                #
                # @constructor
                ###
                constructor: ()->
                  @enter = 13
                  @esc = 27
                  @dash = 189
                  @ctrl = 17
                  @cmd = 91
                  @shift = 16
                  @alt = 18
                  @space = 32
                  @chars =  [@dash, @space]
                  @r = 82
                  @numbers = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57]
                  @controls = [8, 9, 45, 46, 39, 37, @esc, @ctrl, @alt, @shift, @enter, @cmd]
         
                  @f_dash = '‒'
                  @en_dash = '–'
                  @em_dash = '—'
                  @h_bar = '―'
                  @s_dash = '⁓'
                  @hyphen = '‐'
                  @mhyphen = '-'
                  @dashes = [@f_dash, @en_dash, @em_dash, @h_bar, @s_dash, @hyphen, @mhyphen]
         
                  @nbsp = ' '
                  @mnbsp = "&nbsp;"
                  @space = ' '
                  @tspace = ' '
                  @hspace = ' '
         
                  @controlsPressed = []
                  @paginator = document.querySelector ".paginator"
                  @paginatorCurrent = @paginator.querySelector ".current"
                  @paginator.addEventListener "click", @pseudoLabel
                  @paginatorCurrent.addEventListener "keydown", @keyDown
                  @paginatorCurrent.addEventListener "keyup", @keyUp
                  @paginatorCurrent.addEventListener "focus", @savePageValue
                  @paginatorCurrent.addEventListener "blur", @setPage
                  @paginatorTotal = parseInt(@paginator.querySelector(".total").innerHTML,10)
         
                ###*
                # Передать фокус полю ввода
                #
                ###
                pseudoLabel: (event)=>
                  @paginatorCurrent.focus()
         
                ###*
                # Догрузить 1 страничку
                #
                ###
                addPage: =>
         
                  value = @getFromText @paginatorCurrent.innerHTML
                  if typeof value == "number"
                    @paginatorCurrent.innerHTML = value+@hspace+@en_dash+@hspace+(value+1)
                  else
                    @paginatorCurrent.innerHTML = value[0]+@hspace+@en_dash+@hspace+(value[1]+1)
         
                  @setPage()
         
                ###*
                # Показать странички с по
                #
                ###
                showPages: (from, to)=>
         
                  from = parseInt from, 10
                  to = parseInt to, 10
                  if not isNaN(from) or not isNaN(to)
                    return
                  @paginatorCurrent.innerHTML = from+@hspace+@en_dash+@hspace+to
                  @setPage()
         
                ###*
                # Получить текущие странички
                #
                ###
                getPages: =>
                  return @getFromText @paginatorCurrent.innerHTML
         
                ###*
                # Получить последнюю страницу
                #
                ###
                getLastPage: =>
                  value = @getFromText @paginatorCurrent.innerHTML
                  if typeof value != "number"
                    value = value[1]
                  return value
         
         
                ###*
                # Получить количество страниц
                #
                ###
                getPagesTotal: =>
                  return @paginatorTotal
         
                ###*
                # Зарегистрировать коллбек
                #
                ###
                registerCallback: (callbackFunction)=>
                  @callbackFunction = callbackFunction
         
                ###*
                # Запомнить текущее
                #
                ###
                savePageValue: (event)=>
                  @paginatorCurrent.setAttribute "data-pages", @paginatorCurrent.innerHTML
         
                ###*
                # Установить страничку
                #
                ###
                setPage: (event)=>
         
                  value = @getFromText @paginatorCurrent.innerHTML
                  if typeof value == "number"
                    @paginatorCurrent.innerHTML = value
                  else
                    @paginatorCurrent.innerHTML = value[0]+@hspace+@en_dash+@hspace+value[1]
         
                  if typeof @callbackFunction == "function"
                    @callbackFunction.call @
                 
         
                ###*
                # А есть ли дефис в поле
                #
                ###
                ifDash: =>
         
                  for dash in @dashes
                    if @paginatorCurrent.innerHTML.indexOf(dash)>-1
                      return true
                  return false
         
                ###*
                # Кнопку отпустили
                #
                ###
                keyUp: (event)=>
         
                  index = @controlsPressed.indexOf event.which
                  if index > -1  
                    @controlsPressed.splice index, 1
         
                ###*
                # Получить номера страниц из текста
                #
                ###
                getFromText: (value)=>
         
                  spaces = "["+@mnbsp+@nbsp+@space+@tspace+@hspace+"\s]"
                  space_unity = new RegExp spaces, "ig"
                  value = value.replace space_unity, ''
                  dashes = "["+@mhyphen+@f_dash+@en_dash+@em_dash+@h_bar+@s_dash+@hyphen+"]"
                  dash_unity = new RegExp dashes, "ig"
                  value = value.replace dash_unity, @en_dash
                  value = value.replace "/[^\d\\"+@en_dash+"]/ig", ''
                  value = value.split @en_dash
         
                  if value.length>1
                    value[0] = parseInt value[0], 10
                    value[1] = parseInt value[1], 10
                    if isNaN(value[0]) || value[0]<1
                      value[0] = 1
                    if isNaN(value[1]) || value[1]>@paginatorTotal
                      value[1] = @paginatorTotal
                    if value[0]>value[1]
                      value[1]+= value[0]
                      value[0] = value[1] - value[0]
                      value[1] = value[1] - value[0]
                      if value[0]<1
                        value[0] = 1
                      if value[1]>@paginatorTotal
                        value[1] = @paginatorTotal
                    if value[0] == value[1]
                      return value[0]
                    else
                      return value
                  else
                    value = parseInt(value[0],10)
                    if isNaN(value) || value<1 || value>@paginatorTotal
                      value = 1
                    return value
         
                ###*
                # Блокируем запретные кнопки
                #
                ###
                keyDown: (event)=>
                 
                  if event.which not in @controls and event.which not in @numbers and event.which not in @chars and event.which != @r
                    event.preventDefault()
         
                  if event.which in @controls and @controlsPressed.indexOf(event.which)<0
                    @controlsPressed.push event.which
         
                  switch event.which
                    when @r
                      # нельзя запрещать обновление страницы
                      isCmd = (@controlsPressed.indexOf(@cmd) > -1)
                      isCtrl = (@controlsPressed.indexOf(@ctrl) > -1)
                      if not isCmd and not isCtrl
                        event.preventDefault()
         
                    when @dash
                      # зачем нам два дефиса?
                      if @ifDash()
                        event.preventDefault()
         
                      if @controlsPressed.length>0
                        isAlt = (@controlsPressed.indexOf(@alt) > -1)
                        isShift = (@controlsPressed.indexOf(@shift) > -1)
         
                        # можно выводить дефис или тире, но не подчеркивание
                        if isShift and not isAlt
                          event.preventDefault()
         
                    when @enter
                      # Ввод страницы закончен
                      event.preventDefault()
                      @setPage()
                      @paginatorCurrent.blur()
                      index = @controlsPressed.indexOf event.which
                      if index > -1  
                        @controlsPressed.splice index, 1
         
                    when @esc
                      # Отменить действие
                      event.preventDefault()
                      @paginatorCurrent.innerHTML = @paginatorCurrent.getAttribute "data-pages"
                      @paginatorCurrent.blur()
         
                  if (@paginatorCurrent.innerHTML.length>8 || @controlsPressed.length>0) and  (event.which in @numbers)
                    event.preventDefault()
         
         
            return pageController

        pre: code
          |[Развернутое меню]: img/main.png "Развернутое меню"
           [Счастливые люди ловят сачками пролетающих мимо утконосов]: img/platypus.png "Счастливые люди ловят сачками пролетающих мимо утконосов"

        ul
          li В первой паре скобок содержится уникальный в рамках файла идентификатор изображения.
          
          li После двоеточия указан относительный URL изображения в репозитории.
          
          li 
            |В кавычках находится текст, который будет содержаться в атрибуте 
            code title 
            |  изображения.

      section#md-code
        h3 — Как в маркдауне обозначить код?
        p Для представления кода просто добавьте слева от каждой строки 4 пробела.

      section#md-line
        h3 — Как и зачем мне ограничить длинну строки 80 символами?
        p 
          |Что бы редакторам и всем остальным, кто вовлечен в процесс, было удобно работать со статьей, в частности с diff'ами строки следует ограничивать по длине 80 символами. После чего вставляется символ перевода строки. Это можно делать как вручную, так и с помощью плагина для редактора. Если вы используете Sublime Text, то можно использовать плагин Владимира Старкова. Как это сделать написано в статье «
          a href="http://vstarkov.ru/markdown-workflow/" Редактирование Markdown в Sublime Text
          |».

      section#questions
        h3 — У меня ещё остались вопросы!
        p Так задайте! Мы неприменно с вами свяжемся и ответим на них.

        form class="contact-us" method="post" action="/contactme/"
          fieldset
            label.input
              input type="text" name="name" placeholder="Вы можете называть меня"
              span Вы можете называть меня
            label.input
              input type="email" name="email" placeholder="Мой адрес электронной почты"
              span Мой адрес электронной почты
            label.input
              input type="text" name="skype" placeholder="Мой skype"
              span Мой skype
            label.message
              textarea name="message" rows="1" cols="50" placeholder="И вот что я вам скажу!"
              span И вот что я вам скажу!
          nav
            button type="submit" Задать вопрос
            span.error.contact-required
              |Пожалуйста, введите skype или email, 
              br что бы мы смогли с вами связаться
            span.error.wrong-email 
              |У вас слишком необычный email на наш вкус. 
              br Смените его!

    footer
      nav.сontacts
        a.twitter href="http://twitter/@frontenderinfo" @frontenderinfo
        a.rss href="http://feeds.frontender.info/FrontenderMagazine" rss журнала
        a.rss href="http://feeds.frontender.info/FrontenderMagazineArticles" полнотекстовый rss журнала
        a.rss href="http://feeds.frontender.info/FrontenderMagazineHEAP" rss кучи
      nav
        section
          a href="about.html" О проекте
          a href="http://heap.frontender.info/" Куча
          a href="http://frontender.info/" Frontender Magazine
          a href="team.html" Редакция

    template#donate-template
      section.donate-for-article.inline
        section.amount
          span.label Я вот хотел пожертвовать на развитие журнала
          span.amount_due contenteditable="true" 40
          |&#8202;
          span.currecy
          span.money_source.wallet
            .wrapper
              span.card 
                span с банковской карты
              span.wallet 
                span 
                  |из кошелька 
                  b.yandex Я
                  |ндекс.Денег
          nav
            span.confirm И пожертвую!
            span.deny Но передумал
